# Generated by Django 5.1.6 on 2025-03-12 13:41

import colorfield.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='GeneList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=400, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MetacellType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('color', colorfield.fields.ColorField(default='#AAAAAA', image_field=None, max_length=25, samples=None)),
            ],
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('common_name', models.CharField(max_length=100, unique=True)),
                ('scientific_name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'species',
                'verbose_name_plural': 'species',
            },
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=400, null=True)),
                ('domains', models.ManyToManyField(to='app.domain')),
                ('genelists', models.ManyToManyField(to='app.genelist')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.species')),
            ],
            options={
                'unique_together': {('name', 'species')},
            },
        ),
        migrations.CreateModel(
            name='Metacell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('links', models.ManyToManyField(to='app.metacell')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.metacelltype')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.species')),
            ],
            options={
                'unique_together': {('name', 'species')},
            },
        ),
        migrations.CreateModel(
            name='SingleCell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('metacell', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.metacell')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.species')),
            ],
            options={
                'unique_together': {('name', 'species')},
            },
        ),
        migrations.CreateModel(
            name='Ortholog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orthogroup', models.CharField()),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.gene')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.species')),
            ],
        ),
        migrations.AddField(
            model_name='metacelltype',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.species'),
        ),
        migrations.CreateModel(
            name='SingleCellGeneExpression',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('umi_raw', models.FloatField(blank=True, null=True)),
                ('umifrac', models.FloatField(blank=True, null=True)),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.gene')),
                ('single_cell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.singlecell')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.species')),
            ],
            options={
                'verbose_name': 'single-cell gene expression',
                'verbose_name_plural': 'single-cell gene expression',
                'unique_together': {('gene', 'single_cell', 'species')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='metacelltype',
            unique_together={('species', 'name')},
        ),
        migrations.CreateModel(
            name='MetacellLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metacell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metacell', to='app.metacell')),
                ('metacell2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metacell2', to='app.metacell')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.species')),
            ],
            options={
                'unique_together': {('species', 'metacell', 'metacell2')},
            },
        ),
        migrations.CreateModel(
            name='MetacellGeneExpression',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('umi_raw', models.FloatField(blank=True, null=True)),
                ('umifrac', models.FloatField(blank=True, null=True)),
                ('fold_change', models.FloatField(blank=True, null=True)),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.gene')),
                ('metacell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.metacell')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.species')),
            ],
            options={
                'verbose_name': 'metacell gene expression',
                'verbose_name_plural': 'metacell gene expression',
                'unique_together': {('gene', 'metacell', 'species')},
            },
        ),
        migrations.CreateModel(
            name='Meta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.species')),
            ],
            options={
                'verbose_name': 'meta',
                'verbose_name_plural': 'meta',
                'unique_together': {('species', 'key', 'value')},
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('Proteome', 'Proteome'), ('DIAMOND', 'DIAMOND')], max_length=255)),
                ('file', models.FileField(upload_to='data/')),
                ('checksum', models.CharField(editable=False, max_length=64)),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='app.species')),
            ],
            options={
                'unique_together': {('species', 'title')},
            },
        ),
    ]
