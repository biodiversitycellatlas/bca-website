services:
    nginx:
        image: nginx:1.27
        ports:
            - "${WEB_PORT:-8080}:80"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
            # Media and static files
            - static_files:/static
            - ./data:/data
        depends_on:
            - web
            - ghost

    ghost:
        image: ghost:5.125-alpine
        env_file: [.env]
        expose:
            - "2368"
        volumes:
            - ghost_data:/var/lib/ghost/content

    web:
        build: .
        user: "${DOCKER_WEB_USER:-bca}"
        restart: always
        env_file: [.env]
        command: ["./entrypoint.sh"]
        ports:
            - 8000:8000
        volumes:
            - ./entrypoint.sh:/usr/src/app/entrypoint.sh
            # Update Django files in real-time
            - .:/usr/src/app
            # Media and static files
            - static_files:/usr/src/app/static
            - ./data:/usr/src/app/data
        depends_on:
            db:
                condition: service_healthy

    db:
        image: postgres:17
        restart: always
        env_file: [.env]
        command: |
            postgres
                -c max_wal_size=2GB
                -c maintenance_work_mem=1GB
                -c work_mem=64MB
        volumes:
            - db_data:/var/lib/postgresql/data
            - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
        ports:
            - "${DB_PORT:-5432}:5432"
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
            interval: 1s
            timeout: 5s
            retries: 10

volumes:
    db_data:
    static_files:
    ghost_data:
